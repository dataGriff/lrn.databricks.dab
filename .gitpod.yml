tasks:
  - name: Install Databricks CLI
    init: |
      brew tap databricks/tap
      brew install databricks
    command: |
      gp sync-await waitondatabrickscli
      VAR1=$(which -a databricks)
      VAR2="${VAR1//databricks/}"
      export PATH="$VAR2:$PATH"
      databricks -v
  - name: Setup Python
  - init: |
      cd  lrn_databricks_dab
      pip install -r requirements-dev.txt
  - name: Configure Databricks
    command: |
      gp sync-done waitondatabrickscli
      echo "configuring databrick-cli authentication"

      declare DATABRICKS_URL=$DATABRICKS_WORKSPACE
      declare DATABRICKS_ACCESS_TOKEN=$DATABRICKS_PAT

      declare dbconfig=$(<~/.databrickscfg)
      if [[ $dbconfig = *"host = "* && $dbconfig = *"token = "* ]]; then
        echo "file [~/.databrickscfg] is already configured"
      else
        if [[ -z "$DATABRICKS_URL" || -z "$DATABRICKS_ACCESS_TOKEN" ]]; then
          echo "file [~/.databrickscfg] is not configured, but [DATABRICKS_URL],[DATABRICKS_ACCESS_TOKEN] env vars are not set"
        else
          echo "populating [~/.databrickscfg]"
          > ~/.databrickscfg
          echo "[DEFAULT]" >> ~/.databrickscfg
          echo "host = $DATABRICKS_URL" >> ~/.databrickscfg
          echo "token = $DATABRICKS_ACCESS_TOKEN" >> ~/.databrickscfg
          echo "" >> ~/.databrickscfg
        fi
      fi

vscode:
  extensions:
    - dbaeumer.vscode-eslint
    - ms-python.python
    - databricks.databricks
